--Each admission costs $50 for patients without insurance, and $10 for patients with insurance. All patients with an even patient_id have insurance.
--Give each patient a 'Yes' if they have insurance, and a 'No' if they don't have insurance. Add up the admission_total cost for each has_insurance group.
SELECT
  CASE
    WHEN patient_id % 2 = 0 THEN 'Yes'
    ELSE 'No'
  END AS has_insurance,
  SUM(
    CASE
      WHEN patient_id % 2 = 0 THEN 10
      ELSE 50
    END
  ) as cost_after_insurance
FROM admissions
GROUP BY has_insurance;

--Show the provinces that has more patients identified as 'M' than 'F'. Must only show full province_name
SELECT province_names.province_name
FROM province_names
  JOIN patients ON patients.province_id = province_names.province_id
GROUO BY province_name
HAVING
  COUNT(
    CASE
      WHEn gender = 'M' THEN 1
    END
  ) > COUNT(
    CASE
      WHEn gender = 'F' THEN 1
    END
  );
  
/* We are looking for a specific patient. Pull all columns for the patient who matches the following criteria:
- First_name contains an 'r' after the first two letters.
- Identifies their gender as 'F'
- Born in February, May, or December
- Their weight would be between 60kg and 80kg
- Their patient_id is an odd number
- They are from the city 'Kingston'*/
SELECT *
FROM patients
WHERE
  first_name like '__r%'
  AND gender = 'F'
  and month(birth_date) in (02, 05, 12)
  AND weight between 60 AND 80
  AND patient_id % 2 = 1
  AND city = 'Kingston';
  
  --Count percentage of male patients
  SELECT CONCAT(
  ROUND((SELECT COUNT(*) FROM patients
    WHERE gender = 'M')/CAST(COUNT(*) AS float)*100, 2), '%')
FROM patients;

--Count admissions per day and difference with previous day
SELECT
  admission_date,
  COUNT(*) as admission_day,
  COUNT(admission_date) - LAG(count(admission_date), 1) OVER(order by admission_date)
from admissions
group by admission_date;

-- Sort province names but Ontario on top
SELECT province_name
FROM province_names
ORDER BY
  (CASE WHEN province_name = 'Ontario' THEN 0 ELSE 1 END),
  province_name ASC;
  
-- Create temporary password for patient base on id height and year
SELECT
  DISTINCT(patients.patient_id), CONCAT(patients.patient_id, LEN(last_name), YEAR(birth_date)) as tmp_pass
  FROM patients
  JOIN admissions on admissions.patient_id = patients.patient_id;
  
 /*Show patient_id, first_name, last_name, and attending doctor's specialty.
Show only the patients who has a diagnosis as 'Epilepsy' and the doctor's first name is 'Lisa'
Check patients, admissions, and doctors tables for required information. */
SELECT
  patients.patient_id,
  patients.first_name,
  patients.last_name, doctors.specialty
FROM patients
JOIN admissions ON admissions.patient_id = patients.patient_id
JOIN doctors ON doctors.doctor_id = admissions.attending_doctor_id
WHERE admissions.diagnosis = 'Epilepsy' AND doctors.first_name = 'Lisa';

/*Show patient_id, weight, height, isObese from the patients table.
Display isObese as a boolean 0 or 1.
Obese is defined as weight(kg)/(height(m)2) >= 30.
weight is in units kg.
height is in units cm.*/
SELECT
  patient_id, weight, height,
  CASE
    WHEN weight / (power(height / 100.0, 2)) >= 30 Then 1
    ELSE 0 END as isObese
FROM patients;

/* Show all of the patients grouped into weight groups.
Show the total amount of patients in each weight group.
Order the list by the weight group decending.
For example, if they weight 100 to 109 they are placed in the 100 weight group, 110-119 = 110 weight group, etc.*/
select
  COUNT(patient_id) as patients_in_group,
  floor(weight / 10) * 10 as weight_group
from patients
group by weight_group
order by weight_group DESC;
